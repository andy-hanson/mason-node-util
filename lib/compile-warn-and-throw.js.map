{"version":3,"sources":["compile-warn-and-throw.js","compile-warn-and-throw.ts"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,wBAAwB,CAAC,EAAE,OAAO,CAAC,CAAC;KAChF;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;ACRjB,QAAA,SAAA,GAAA,OAAA,CAAmB,SACnB,CAAC,CAD2B;AAC5B,QAAA,sBAAA,GAAA,OAAA,CAAgD,wBAEhD,CAAC,CAFuE;AAExE,aAAA,mBAAA,CAA4C,QAAa,EAAE,WAAmB,EAAE,QAAgB,EAAA;AAC/F,eAAO,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAA;KAC1E;AAFD,UAAA,CAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,CAAA;ADYI,WAAO,CAAC,OAAO,GAAG,mBCVrB,CAAA;AAED,aAAA,iBAAA,CAAkC,QAAa,EAAE,WAAmB,EAAE,QAAgB,EAAA;AACrF,eAAO,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,QAAQ,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAA;KACxE;AAFe,WAAA,CAAA,iBAAiB,GAAA,iBAEhC,CAAA;AAED,aAAA,MAAA,OAAyC,QAAa,EAAE,QAAgB,EAAA;YAAvD,QAAQ,QAAR,QAAQ;YAAE,MAAM,QAAN,MAAM;;AAChC,aAAK,MAAM,CAAC,IAAI,QAAQ,EACvB,SAAA,CAAA,IAAI,CAAC,sBAAA,CAAA,aAAa,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAA;AAEjC,YAAI,MAAM,YAAY,QAAQ,CAAC,YAAY,EAAE;AAC5C,kBAAM,SAAS,GAAG,sBAAA,CAAA,OAAkB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;AACtD,kBAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,CAAC,CAAA;AAC9D,kBAAM,CAAC,OAAO,GAAG,SAAS,CAAA;AAC1B,kBAAM,MAAM,CAAA;SACZ,MACA,OAAO,MAAM,CAAA;KACd;CDUA,CAAC,CAAC","file":"compile-warn-and-throw.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'console', './format-compile-error'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var console_1 = require('console');\n    var format_compile_error_1 = require('./format-compile-error');\n    function compileWarnAndThrow(compiler, masonSource, filename) {\n        return handle(compiler.compile(masonSource, filename), compiler, filename);\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = compileWarnAndThrow;\n    function parseWarnAndThrow(compiler, masonSource, filename) {\n        return handle(compiler.parse(masonSource, filename), compiler, filename);\n    }\n    exports.parseWarnAndThrow = parseWarnAndThrow;\n    function handle({ warnings, result }, compiler, filename) {\n        for (const _ of warnings)\n            console_1.warn(format_compile_error_1.formatWarning(_, filename));\n        if (result instanceof compiler.CompileError) {\n            const formatted = format_compile_error_1.default(result, filename);\n            result.stack = result.stack.replace(result.message, formatted);\n            result.message = formatted;\n            throw result;\n        }\n        else\n            return result;\n    }\n});\n","import {warn} from 'console'\nimport formatCompileError, {formatWarning} from './format-compile-error'\n\nexport default function compileWarnAndThrow(compiler: any, masonSource: string, filename: string): any {\n\treturn handle(compiler.compile(masonSource, filename), compiler, filename)\n}\n\nexport function parseWarnAndThrow(compiler: any, masonSource: string, filename: string): any {\n\treturn handle(compiler.parse(masonSource, filename), compiler, filename)\n}\n\nfunction handle({warnings, result}: any, compiler: any, filename: string) {\n\tfor (const _ of warnings)\n\t\twarn(formatWarning(_, filename))\n\n\tif (result instanceof compiler.CompileError) {\n\t\tconst formatted = formatCompileError(result, filename)\n\t\tresult.stack = result.stack.replace(result.message, formatted)\n\t\tresult.message = formatted\n\t\tthrow result\n\t} else\n\t\treturn result\n}\n"],"sourceRoot":"/source/"}