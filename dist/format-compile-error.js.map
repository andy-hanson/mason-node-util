{"version":3,"sources":["../src/format-compile-error.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;mBAEwB,kBAAkB;SAI1B,aAAa,GAAb,aAAa;;UAJL,kBAAkB;;;;UAI1B,aAAa","file":"format-compile-error.js","sourcesContent":["import {blue, bold, green, magenta} from 'chalk'\n\nexport default function formatCompileError(error, modulePath) {\n\treturn format(error.errorMessage, modulePath, 'error')\n}\n\nexport function formatWarning(errorMessage, modulePath) {\n\t// Extra space to match up with 'error'\n\treturn format(errorMessage, modulePath, 'warn ')\n}\n\nfunction format(errorMessage, modulePath, kind) {\n\tlet message = `${blue(modulePath)}\\n${magenta(kind)} ${bold.red(errorMessage.loc)} `\n\t// TODO:ES6 Array.from(formatCode(...)) should work\n\tfor (const _ of errorMessage.messageParts(green))\n\t\tmessage = message + _\n\treturn message\n}\n"]}