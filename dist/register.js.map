{"version":3,"sources":["../src/register.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;mBAIwB,QAAQ;;;;;;;;;;UAAR,QAAQ","file":"register.js","sourcesContent":["import {readFileSync, realpathSync} from 'fs'\nimport {install} from 'source-map-support'\nimport compileWarnAndThrow from './compile-warn-and-throw'\n\nexport default function register(compiler) {\n\tconst sourceMaps = new Map()\n\n\tinstall({\n\t\tretrieveSourceMap(source) {\n\t\t\tconst _ = sourceMaps.get(source)\n\t\t\treturn _ === undefined ? null : {url: null, map: _}\n\t\t}\n\t})\n\n\tfunction compileAndRegisterSourceMap(msCode, filename) {\n\t\tconst {code, sourceMap} = compileWarnAndThrow(compiler, msCode, filename)\n\t\tsourceMaps.set(realpathSync(filename), sourceMap)\n\t\treturn code\n\t}\n\n\trequire.extensions['.ms'] = (newModule, filename) => {\n\t\tconst ms = readFileSync(filename, 'utf-8')\n\t\tconst js = compileAndRegisterSourceMap(ms, filename)\n\t\tnewModule._compile(js, filename)\n\t}\n}\n"]}