{"version":3,"sources":["../src/register.js"],"names":[],"mappings":";;;;;;;;kBAAyC,IAAI;;gCACoB,oBAAoB;;oCACrD,0BAA0B;;;;AAE1D,MAAM,UAAU,GAAG,IAAI,GAAG,EAAE,CAAA;;kBAEb,OAAO,IAAI;AACzB,eAAc,GAAG,OAAO,CAAA;AACxB,QAAO,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,KAAK;AACpD,QAAM,EAAE,GAAG,sBAAa,QAAQ,EAAE,OAAO,CAAC,CAAA;AAC1C,QAAM,EAAE,GAAG,2BAA2B,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAA;AACpD,WAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAA;EAChC,CAAA;CACD;;AAED,+BAAQ;AACP,kBAAiB,CAAC,MAAM,EAAE;AACzB,QAAM,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;AAChC,SAAO,CAAC,KAAK,SAAS,GACrB,yCAAqB,MAAM,CAAC,GAC5B,EAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAC,CAAA;EACpB;CACD,CAAC,CAAA;;AAEF,IAAI,cAAc,GAAG,IAAI,CAAA;;AAEzB,MAAM,2BAA2B,GAAG,CAAC,KAAK,EAAE,UAAU,KAAK;4BAChC,mCAAoB,KAAK,EAAE,UAAU,EAAE,cAAc,CAAC;;OAAzE,IAAI,wBAAJ,IAAI;OAAE,SAAS,wBAAT,SAAS;;AACtB,OAAM,UAAU,GAAG,sBAAa,UAAU,CAAC,CAAA;AAC3C,WAAU,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,CAAC,CAAA;AACrC,QAAO,IAAI,CAAA;CACX,CAAA","file":"register.js","sourcesContent":["import {readFileSync, realpathSync} from 'fs'\nimport {install, retrieveSourceMap as oldRetrieveSourceMap} from 'source-map-support'\nimport compileWarnAndThrow from './compile-warn-and-throw'\n\nconst sourceMaps = new Map()\n\nexport default options => {\n\tcompileOptions = options\n\trequire.extensions['.ms'] = (newModule, filename) => {\n\t\tconst ms = readFileSync(filename, 'utf-8')\n\t\tconst js = compileAndRegisterSourceMap(ms, filename)\n\t\tnewModule._compile(js, filename)\n\t}\n}\n\ninstall({\n\tretrieveSourceMap(source) {\n\t\tconst _ = sourceMaps.get(source)\n\t\treturn _ === undefined ?\n\t\t\toldRetrieveSourceMap(source):\n\t\t\t{url: null, map: _}\n\t}\n})\n\nlet compileOptions = null\n\nconst compileAndRegisterSourceMap = (msSrc, inFilePath) => {\n\tconst {code, sourceMap} = compileWarnAndThrow(msSrc, inFilePath, compileOptions)\n\tconst fullInPath = realpathSync(inFilePath)\n\tsourceMaps.set(fullInPath, sourceMap)\n\treturn code\n}\n"]}