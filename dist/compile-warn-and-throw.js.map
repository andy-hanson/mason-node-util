{"version":3,"sources":["../src/compile-warn-and-throw.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;mBAGwB,mBAAmB;SAI3B,iBAAiB,GAAjB,iBAAiB;;;;;;;;;;UAJT,mBAAmB;;;;UAI3B,iBAAiB","file":"compile-warn-and-throw.js","sourcesContent":["import {warn} from 'console'\nimport formatCompileError, {formatWarning} from './format-compile-error'\n\nexport default function compileWarnAndThrow(compiler, code, filename) {\n\treturn handle('compile', compiler, code, filename)\n}\n\nexport function parseWarnAndThrow(compiler, code, filename) {\n\treturn handle('parse', compiler, code, filename)\n}\n\nfunction handle(method, compiler, code, filename) {\n\tconst {warnings, result} = compiler[method](code, filename)\n\n\tfor (const _ of warnings)\n\t\twarn(formatWarning(_, filename))\n\n\tif (result instanceof compiler.CompileError) {\n\t\tconst formatted = formatCompileError(result, filename)\n\t\tresult.stack = result.stack.replace(result.message, formatted)\n\t\tresult.message = formatted\n\t\tthrow result\n\t} else\n\t\treturn result\n}\n"]}