{"version":3,"sources":["../src/compile-warn-and-throw.js"],"names":[],"mappings":";;;;;;;;uBAAmB,SAAS;;uCACR,4BAA4B;;;;4CACvB,iCAAiC;;;;kCACV,wBAAwB;;;;kBAEzD,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,KAAK;gBACb,uCAAQ,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAC,MAAM,EAAC,EAAE,IAAI,CAAC,CAAC;;OAAlE,QAAQ,YAAR,QAAQ;OAAE,MAAM,YAAN,MAAM;;AAEvB,MAAK,IAAI,OAAO,IAAI,QAAQ,EAC3B,mBAAK,uCAAc,OAAO,EAAE,MAAM,CAAC,CAAC,CAAA;;AAErC,KAAI,MAAM,kDAAwB,EAAE;AACnC,iBAAe,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;AAC/B,QAAM,MAAM,CAAA;EACZ;;AAED,QAAO,MAAM,CAAA;CACb;;AAED,MAAM,eAAe,GAAG,CAAC,KAAK,EAAE,UAAU,KAAK;AAC9C,OAAM,SAAS,GAAG,kCAAmB,KAAK,EAAE,UAAU,CAAC,CAAA;AACvD,MAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAA;AAC3D,MAAK,CAAC,OAAO,GAAG,SAAS,CAAA;CACzB,CAAA","file":"compile-warn-and-throw.js","sourcesContent":["import {warn} from 'console'\nimport compile from 'mason-compile/dist/compile'\nimport CompileError from 'mason-compile/dist/CompileError'\nimport formatCompileError, {formatWarning} from './format-compile-error'\n\nexport default (string, inFile, opts) => {\n\tconst {warnings, result} = compile(string, Object.assign({inFile}, opts))\n\n\tfor (let warning of warnings)\n\t\twarn(formatWarning(warning, inFile))\n\n\tif (result instanceof CompileError) {\n\t\tsetErrorMessage(result, inFile)\n\t\tthrow result\n\t}\n\n\treturn result\n}\n\nconst setErrorMessage = (error, modulePath) => {\n\tconst formatted = formatCompileError(error, modulePath)\n\terror.stack = error.stack.replace(error.message, formatted)\n\terror.message = formatted\n}\n"]}